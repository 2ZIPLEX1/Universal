import os
import logging
from telegram import Update, InlineKeyboardMarkup, InlineKeyboardButton
from telegram.ext import ContextTypes

from bot.utils.keyboards import get_balance_keyboard, get_payment_method_keyboard
from db.models import User

logger = logging.getLogger(__name__)

async def balance_menu(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–ú–µ–Ω—é –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    user_id = update.effective_user.id
    username = update.effective_user.username or "–ù–µ —É–∫–∞–∑–∞–Ω"
    
    # –ü–æ–ª—É—á–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–¥–æ–±–∞–≤—å—Ç–µ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—É—é –ª–æ–≥–∏–∫—É)
    user_balance = 0  # –ó–∞–≥–ª—É—à–∫–∞, –∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—É—é –ª–æ–≥–∏–∫—É –ø–æ–ª—É—á–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞
    
    balance_text = f"üíº –¢–≤–æ–π –±–∞–ª–∞–Ω—Å\nUserID: {user_id}\nUserName: {username}\n–ë–∞–ª–∞–Ω—Å: {user_balance} —Ä—É–±."
    
    if user_balance < 50:
        balance_text += "\n\n–ü–æ–ø–æ–ª–Ω–∏ —Å–≤–æ–π –±–∞–ª–∞–Ω—Å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —á–µ–∫–æ–≤ –∏ –∫–≤–∏—Ç–∞–Ω—Ü–∏–π –≤ –Ω–∞—à–µ–º –±–æ—Ç–µ.\nüè¶–ß—Ç–æ–±—ã –ø–æ–ø–æ–ª–Ω–∏—Ç—å –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ."
    else:
        balance_text += "\n\nü™ô–¢—ã –º–æ–∂–µ—à—å –ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å –∫–Ω–æ–ø–∫–æ–π –Ω–∏–∂–µ."
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–∞—Ä—Ç–∏–Ω–∫–æ–π
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        photo_path = "static/images/balance.jpg"
        if os.path.exists(photo_path):
            await update.message.reply_photo(
                photo=open(photo_path, 'rb'),
                caption=balance_text,
                reply_markup=get_balance_keyboard(user_balance),
                parse_mode="Markdown"
            )
        else:
            # –ï—Å–ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–µ—Ç, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç
            await update.message.reply_text(
                balance_text,
                reply_markup=get_balance_keyboard(user_balance),
                parse_mode="Markdown"
            )
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
        await update.message.reply_text(
            balance_text,
            reply_markup=get_balance_keyboard(user_balance),
            parse_mode="Markdown"
        )

async def add_balance(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞"""
    query = update.callback_query
    await query.answer()
    
    await query.edit_message_text(
        text="üí∞ –í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞:",
        reply_markup=get_payment_method_keyboard(),
        parse_mode="Markdown"
    )

async def pay_card(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ–ø–ª–∞—Ç—ã –∫–∞—Ä—Ç–æ–π"""
    query = update.callback_query
    await query.answer()
    
    # –¢—É—Ç –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –≤–∞—à–∞ –ª–æ–≥–∏–∫–∞ –¥–ª—è –æ–ø–ª–∞—Ç—ã –∫–∞—Ä—Ç–æ–π
    # –ù–∞–ø—Ä–∏–º–µ—Ä, —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—á–µ—Ç–∞, —Å—Å—ã–ª–∫–∏ –Ω–∞ –æ–ø–ª–∞—Ç—É –∏ —Ç.–¥.
    
    await query.edit_message_text(
        text="üí≥ –û–ø–ª–∞—Ç–∞ –±–∞–Ω–∫–æ–≤—Å–∫–æ–π –∫–∞—Ä—Ç–æ–π\n\n–î–ª—è –æ–ø–ª–∞—Ç—ã –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ: [—Å—Å—ã–ª–∫–∞ –Ω–∞ –æ–ø–ª–∞—Ç—É](https://example.com)\n\n–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –±–∞–ª–∞–Ω—Å –±—É–¥–µ—Ç –ø–æ–ø–æ–ª–Ω–µ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏.",
        reply_markup=InlineKeyboardMarkup([[InlineKeyboardButton("¬´ –ù–∞–∑–∞–¥", callback_data="add_balance")]]),
        parse_mode="Markdown"
    )

async def pay_crypto(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ–ø–ª–∞—Ç—ã –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–æ–π"""
    query = update.callback_query
    await query.answer()
    
    # –¢—É—Ç –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –≤–∞—à–∞ –ª–æ–≥–∏–∫–∞ –¥–ª—è –æ–ø–ª–∞—Ç—ã –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–æ–π
    
    await query.edit_message_text(
        text="üì± –û–ø–ª–∞—Ç–∞ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–æ–π\n\n–î–ª—è –æ–ø–ª–∞—Ç—ã –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Ä–µ–¥—Å—Ç–≤–∞ –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π –∞–¥—Ä–µ—Å:\n\nBTC: bc1q...\nETH: 0x...\n\n–ü–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å—Ä–µ–¥—Å—Ç–≤ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.",
        reply_markup=InlineKeyboardMarkup([[InlineKeyboardButton("¬´ –ù–∞–∑–∞–¥", callback_data="add_balance")]]),
        parse_mode="Markdown"
    )