from telegram import Update, InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardMarkup, KeyboardButton
from telegram.ext import ContextTypes
import logging
import os
from bot.config import CHANNEL_ID, CHANNEL_URL, ADMIN_ID

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥—É–ª–∏ –¥—Ä—É–≥–∏—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
from bot.utils.subscription import check_subscription
from bot.utils.keyboards import get_main_keyboard
from db.models import User

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

async def start_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    user = update.effective_user
    
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    User.get_or_create(
        user_id=user.id,
        username=user.username,
        first_name=user.first_name,
        last_name=user.last_name
    )
    
    # –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if "state" in context.user_data:
        del context.user_data["state"]
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ CHANNEL_ID –∑–∞–¥–∞–Ω
    is_subscribed = True
    if CHANNEL_ID:
        is_subscribed = await check_subscription(context.bot, user.id, CHANNEL_ID)
    
    if not is_subscribed:
        # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω –Ω–∞ –∫–∞–Ω–∞–ª - –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º GIF —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–µ–π –ø–æ–¥–ø–∏—Å–∫–∏
        try:
            await update.message.reply_animation(
                animation="https://usagif.com/wp-content/uploads/gifs/starfall-gif-27.gif",
                caption=f"üõë –ü—Ä–∏–≤–µ—Ç! –ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –Ω–∞—à–∏–º –±–æ—Ç–æ–º, –Ω—É–∂–Ω–æ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ [–Ω–∞—à –∫–∞–Ω–∞–ª]({CHANNEL_URL}). \n\n‚ö°Ô∏è –ü–æ–¥–ø–∏—Å–∞–ª—Å—è? –ù–∞–ø–∏—à–∏ –±–æ—Ç—É –∫–æ–º–∞–Ω–¥—É /start –∏–ª–∏ –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç!",
                parse_mode="Markdown"
            )
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ GIF: {e}")
            # –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç
            await update.message.reply_text(
                f"üõë –ü—Ä–∏–≤–µ—Ç! –ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –Ω–∞—à–∏–º –±–æ—Ç–æ–º, –Ω—É–∂–Ω–æ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ [–Ω–∞—à –∫–∞–Ω–∞–ª]({CHANNEL_URL}). \n\n‚ö°Ô∏è –ü–æ–¥–ø–∏—Å–∞–ª—Å—è? –ù–∞–ø–∏—à–∏ –±–æ—Ç—É –∫–æ–º–∞–Ω–¥—É /start –∏–ª–∏ –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç!",
                parse_mode="Markdown"
            )
    else:
        # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–¥–ø–∏—Å–∞–Ω –Ω–∞ –∫–∞–Ω–∞–ª - –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —ç–º–æ–¥–∑–∏, –∑–∞—Ç–µ–º GIF —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
        # –°–Ω–∞—á–∞–ª–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —ç–º–æ–¥–∑–∏ –æ—Ç–¥–µ–ª—å–Ω—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º
        await update.message.reply_text("üí´")
        
        # –ó–∞—Ç–µ–º –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º GIF —Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ–º –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π –≤ –æ–¥–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏
        try:
            await update.message.reply_animation(
                animation="https://media1.tenor.com/m/5hCo-bxm3mUAAAAC/gojo-gojo-annoyed.gif",
                caption="–ü—Ä–∏–≤–µ—Ç, –¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞\n\n–í –Ω–∞—à–µ–º –±–æ—Ç–µ —Ç—ã –º–æ–∂–µ—à—å —Å–æ–∑–¥–∞—Ç—å —Ç–æ—á–Ω—É—é –∫–æ–ø–∏—é —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤ –ø–µ—Ä–µ–≤–æ–¥–æ–≤, —á–µ–∫–æ–≤ –ø–æ –æ–ø–µ—Ä–∞—Ü–∏—è–º, –∏—Å—Ç–æ—Ä–∏–∏ –ø–µ—Ä–µ–≤–æ–¥–æ–≤ –∏ –ø–æ–∫—É–ø–æ–∫! –ò—Å–ø–æ–ª—å–∑—É–π –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è —Ä–æ–∑—ã–≥—Ä—ã—à–µ–π –∏ –≤ –ª–∏—á–Ω—ã—Ö —Ü–µ–ª—è—Ö, –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –∑–∞ –≤—Å–µ –¥–µ–π—Å—Ç–≤–∏—è –Ω–µ—Å–µ—à—å —Ç–æ–ª—å–∫–æ —Ç—ã.\n\nüìë –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –∏ –æ–ø–∏—Å–∞–Ω–∏–µ –±–æ—Ç—ã\nüìñ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ",
                reply_markup=get_main_keyboard(),
                parse_mode="Markdown"
            )
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ GIF: {e}")
            # –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
            await update.message.reply_text(
                "–ü—Ä–∏–≤–µ—Ç, –¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞\n\n–í –Ω–∞—à–µ–º –±–æ—Ç–µ —Ç—ã –º–æ–∂–µ—à—å —Å–æ–∑–¥–∞—Ç—å —Ç–æ—á–Ω—É—é –∫–æ–ø–∏—é —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤ –ø–µ—Ä–µ–≤–æ–¥–æ–≤, —á–µ–∫–æ–≤ –ø–æ –æ–ø–µ—Ä–∞—Ü–∏—è–º, –∏—Å—Ç–æ—Ä–∏–∏ –ø–µ—Ä–µ–≤–æ–¥–æ–≤ –∏ –ø–æ–∫—É–ø–æ–∫! –ò—Å–ø–æ–ª—å–∑—É–π –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è —Ä–æ–∑—ã–≥—Ä—ã—à–µ–π –∏ –≤ –ª–∏—á–Ω—ã—Ö —Ü–µ–ª—è—Ö, –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –∑–∞ –≤—Å–µ –¥–µ–π—Å—Ç–≤–∏—è –Ω–µ—Å–µ—à—å —Ç–æ–ª—å–∫–æ —Ç—ã.\n\nüìë –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –∏ –æ–ø–∏—Å–∞–Ω–∏–µ –±–æ—Ç—ã\nüìñ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ",
                reply_markup=get_main_keyboard(),
                parse_mode="Markdown"
            )

async def process_message(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    user = update.effective_user
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ CHANNEL_ID –∑–∞–¥–∞–Ω
    is_subscribed = True
    if CHANNEL_ID:
        is_subscribed = await check_subscription(context.bot, user.id, CHANNEL_ID)
    
    if not is_subscribed:
        # –ï—Å–ª–∏ –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ–º –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è (–±–µ–∑ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã)
        await start_command(update, context)
        return
    
    message_text = update.message.text
    
    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ —Ä–µ–∂–∏–º–µ –≤–≤–æ–¥–∞ –¥–∞–Ω–Ω—ã—Ö, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∏—Ö
    user_state = context.user_data.get("state", None)
    
    # –¢–∏–Ω—å–∫–æ—Ñ—Ñ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    if user_state == "waiting_tinkoff_balance_main_data":
        from bot.handlers import checks
        await checks.process_tinkoff_balance_main_data(update, context)
    elif user_state == "waiting_tinkoff_balance_card_data":
        from bot.handlers import checks
        await checks.process_tinkoff_balance_card_data(update, context)
    elif user_state == "waiting_tinkoff_send_card_data":
        from bot.handlers import checks
        await checks.process_tinkoff_send_card_data(update, context)
    elif user_state == "waiting_tinkoff_send_sbp_data":
        from bot.handlers import checks
        await checks.process_tinkoff_send_sbp_data(update, context)
    elif user_state == "waiting_tinkoff_history_data":
        from bot.handlers import checks
        await checks.process_tinkoff_history_data(update, context)
    # –ê–ª—å—Ñ–∞-–±–∞–Ω–∫ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    elif user_state == "waiting_alfabank_balance_main_data":
        from bot.handlers import checks
        await checks.process_alfabank_balance_main_data(update, context)
    elif user_state == "waiting_alfabank_balance_account_data":
        from bot.handlers import checks
        await checks.process_alfabank_balance_account_data(update, context)
    elif user_state == "waiting_alfabank_send_card_data":
        from bot.handlers import checks
        await checks.process_alfabank_send_card_data(update, context)
    elif user_state == "waiting_alfabank_send_sbp_data":
        from bot.handlers import checks
        await checks.process_alfabank_send_sbp_data(update, context)
    # –°–±–µ—Ä–±–∞–Ω–∫ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    elif user_state == "waiting_sberbank_balance_main_data":
        from bot.handlers import checks
        await checks.process_sberbank_balance_main_data(update, context)
    elif user_state == "waiting_sberbank_balance_card_data":
        from bot.handlers import checks
        await checks.process_sberbank_balance_card_data(update, context)
    elif user_state == "waiting_sberbank_balance_account_data":
        from bot.handlers import checks
        await checks.process_sberbank_balance_account_data(update, context)
    elif user_state == "waiting_sberbank_transfer_done_data":
        from bot.handlers import checks
        await checks.process_sberbank_transfer_done_data(update, context)
    elif user_state == "waiting_sberbank_transfer_sbp_data":
        from bot.handlers import checks
        await checks.process_sberbank_transfer_sbp_data(update, context)
    elif user_state == "waiting_sberbank_transfer_delivered_data":
        from bot.handlers import checks
        await checks.process_sberbank_transfer_delivered_data(update, context)
    # –°—Ç–∞—Ä—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ (–¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏)
    elif user_state == "waiting_tinkoff_balance_data":
        from bot.handlers import checks
        await checks.process_tinkoff_balance_data(update, context)
    elif user_state == "waiting_tinkoff_card_receipt_data":
        from bot.handlers import receipts
        await receipts.process_tinkoff_card_receipt_data(update, context)
    elif user_state == "waiting_tinkoff_phone_receipt_data":
        from bot.handlers import receipts
        await receipts.process_tinkoff_phone_receipt_data(update, context)
    elif user_state == "waiting_kaspi_transfer_receipt_data":
        from bot.handlers import receipts
        await receipts.process_kaspi_transfer_receipt_data(update, context)
    elif user_state == "waiting_sberbank_sbp_receipt_data":
        from bot.handlers import receipts
        await receipts.process_sberbank_sbp_receipt_data(update, context)
    elif user_state == "waiting_sberbank_card_receipt_data":
        from bot.handlers import receipts
        await receipts.process_sberbank_card_receipt_data(update, context)
    elif user_state == "waiting_bot_token":
        from bot.handlers import bot_creation
        await bot_creation.process_bot_token(update, context)
    else:
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é
        if message_text == "üóíÔ∏è –ß–µ–∫–∏":
            from bot.handlers import checks
            await checks.checks_menu(update, context)
        elif message_text == "üßæ Pdf –ö–≤–∏—Ç–∞–Ω—Ü–∏–∏":
            from bot.handlers import receipts
            await receipts.receipts_menu(update, context)
        elif message_text == "üíº –ë–∞–ª–∞–Ω—Å":
            # –í—Ä–µ–º–µ–Ω–Ω–æ –∑–∞–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–æ –¥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–æ–¥—É–ª—è balance
            await update.message.reply_text(
                "üíº –ë–∞–ª–∞–Ω—Å - —Ñ—É–Ω–∫—Ü–∏—è –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞",
                reply_markup=get_main_keyboard()
            )
        elif message_text == "‚ÑπÔ∏è –ò–Ω—Ñ–æ":
            # –í—Ä–µ–º–µ–Ω–Ω–æ –∑–∞–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–æ –¥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–æ–¥—É–ª—è info
            await update.message.reply_text(
                "‚ÑπÔ∏è –ò–Ω—Ñ–æ - —Ñ—É–Ω–∫—Ü–∏—è –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞", 
                reply_markup=get_main_keyboard()
            )
        elif message_text == "üÜò –ü–æ–¥–¥–µ—Ä–∂–∫–∞":
            await support_handler(update, context)
        elif message_text == "üí∞ –°–æ–∑–¥–∞—Ç—å —Å–≤–æ–µ–≥–æ –±–æ—Ç–∞":
            # –í—Ä–µ–º–µ–Ω–Ω–æ –∑–∞–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–æ –¥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–æ–¥—É–ª—è bot_creation
            await update.message.reply_text(
                "üí∞ –°–æ–∑–¥–∞—Ç—å —Å–≤–æ–µ–≥–æ –±–æ—Ç–∞ - —Ñ—É–Ω–∫—Ü–∏—è –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞",
                reply_markup=get_main_keyboard()
            )
        else:
            # –ï—Å–ª–∏ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏ –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–∞ –∫–æ–º–∞–Ω–¥–∞, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
            await update.message.reply_text(
                "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é:",
                reply_markup=get_main_keyboard()
            )

async def support_handler(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ - –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç —á–∞—Ç —Å –∞–¥–º–∏–Ω–æ–º"""
    # ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    admin_id = ADMIN_ID
    
    # –°–æ–∑–¥–∞–µ–º URL –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ —á–∞—Ç —Å –∞–¥–º–∏–Ω–æ–º
    support_url = f"tg://user?id={admin_id}"
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        photo_path = "static/images/support.jpg"
        if os.path.exists(photo_path):
            await update.message.reply_photo(
                photo=open(photo_path, 'rb'),
                caption="üÜò –ü–æ–¥–¥–µ—Ä–∂–∫–∞\n\n–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –±–æ—Ç–∞, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.",
                reply_markup=InlineKeyboardMarkup([
                    [InlineKeyboardButton("–ù–∞–ø–∏—Å–∞—Ç—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É", url=support_url)]
                ]),
                parse_mode="Markdown"
            )
        else:
            # –ï—Å–ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–µ—Ç, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç
            await update.message.reply_text(
                "üÜò –ü–æ–¥–¥–µ—Ä–∂–∫–∞\n\n–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –±–æ—Ç–∞, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.",
                reply_markup=InlineKeyboardMarkup([
                    [InlineKeyboardButton("–ù–∞–ø–∏—Å–∞—Ç—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É", url=support_url)]
                ]),
                parse_mode="Markdown"
            )
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
        await update.message.reply_text(
            "üÜò –ü–æ–¥–¥–µ—Ä–∂–∫–∞\n\n–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –±–æ—Ç–∞, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.",
            reply_markup=InlineKeyboardMarkup([
                [InlineKeyboardButton("–ù–∞–ø–∏—Å–∞—Ç—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É", url=support_url)]
            ]),
            parse_mode="Markdown"
        )

async def back_to_main(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    query = update.callback_query
    
    if query:
        await query.answer()
        
        # –û—á–∏—Å—Ç–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if "state" in context.user_data:
            del context.user_data["state"]
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≥–ª–∞–≤–Ω—ã–º –º–µ–Ω—é
        await query.message.reply_text(
            "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
            reply_markup=get_main_keyboard()
        )
    else:
        # –ï—Å–ª–∏ —Ñ—É–Ω–∫—Ü–∏—è –≤—ã–∑–≤–∞–Ω–∞ –Ω–µ –∏–∑ callback, –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        await update.message.reply_text(
            "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
            reply_markup=get_main_keyboard()
        )