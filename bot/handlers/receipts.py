import os
import logging
import io
from telegram import Update, InlineKeyboardMarkup, InlineKeyboardButton
from telegram.ext import ContextTypes

from bot.utils.keyboards import (
    get_bank_keyboard, get_tinkoff_receipts_keyboard, 
    get_kaspi_receipts_keyboard, get_sberbank_receipts_keyboard, 
    get_back_keyboard
)
from generators.receipt.tinkoff import TinkoffReceiptGenerator
from db.models import Transaction, Stats

logger = logging.getLogger(__name__)

async def receipts_menu(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–ú–µ–Ω—é –≤—ã–±–æ—Ä–∞ –±–∞–Ω–∫–∞ –¥–ª—è –∫–≤–∏—Ç–∞–Ω—Ü–∏–π"""
    # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ –≤ –º–µ–Ω—é
    if "state" in context.user_data:
        del context.user_data["state"]
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –æ—Ç–∫—É–¥–∞ –≤—ã–∑–≤–∞–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è: –∏–∑ callback –∏–ª–∏ –∏–∑ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    if update.callback_query:
        # –í—ã–∑–≤–∞–Ω–∞ –∏–∑ callback - –∑–∞–º–µ–Ω—è–µ–º caption –º–µ–¥–∏–∞-—Å–æ–æ–±—â–µ–Ω–∏—è
        query = update.callback_query
        await query.answer()
        
        await query.edit_message_caption(
            caption="üí´ –í—ã–±–µ—Ä–∏ –∫–∞–∫—É—é –∫–≤–∏—Ç–∞–Ω—Ü–∏—é —Ö–æ—á–µ—à—å —Å–æ–∑–¥–∞—Ç—å:",
            reply_markup=get_bank_keyboard("receipt"),
            parse_mode="Markdown"
        )
    else:
        # –í—ã–∑–≤–∞–Ω–∞ –∏–∑ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è - –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º GIF + —Ç–µ–∫—Å—Ç + –∫–Ω–æ–ø–∫–∏ –≤ –æ–¥–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏
        try:
            await update.message.reply_animation(
                animation="https://usagif.com/wp-content/uploads/gifs/starfall-gif-27.gif",
                caption="üí´ –í—ã–±–µ—Ä–∏ –∫–∞–∫—É—é –∫–≤–∏—Ç–∞–Ω—Ü–∏—é —Ö–æ—á–µ—à—å —Å–æ–∑–¥–∞—Ç—å:",
                reply_markup=get_bank_keyboard("receipt"),
                parse_mode="Markdown"
            )
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ GIF: {e}")
            # –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç —Å –º–µ–Ω—é
            await update.message.reply_text(
                "üí´ –í—ã–±–µ—Ä–∏ –∫–∞–∫—É—é –∫–≤–∏—Ç–∞–Ω—Ü–∏—é —Ö–æ—á–µ—à—å —Å–æ–∑–¥–∞—Ç—å:",
                reply_markup=get_bank_keyboard("receipt"),
                parse_mode="Markdown"
            )

async def tinkoff_receipts(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–ú–µ–Ω—é –∫–≤–∏—Ç–∞–Ω—Ü–∏–π –¢–∏–Ω—å–∫–æ—Ñ—Ñ"""
    query = update.callback_query
    await query.answer()
    
    # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if "state" in context.user_data:
        del context.user_data["state"]
    
    # –ó–∞–º–µ–Ω—è–µ–º caption –º–µ–¥–∏–∞-—Å–æ–æ–±—â–µ–Ω–∏—è
    await query.edit_message_caption(
        caption="üßæ –¢–∏–Ω—å–∫–æ—Ñ—Ñ - –≤—ã–±–µ—Ä–∏ —Ç–∏–ø –ø–µ—Ä–µ–≤–æ–¥–∞ –≤ –∫–≤–∏—Ç–∞–Ω—Ü–∏–∏:",
        reply_markup=get_tinkoff_receipts_keyboard(),
        parse_mode="Markdown"
    )

async def process_tinkoff_card_receipt_data(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–µ–¥–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∫–≤–∏—Ç–∞–Ω—Ü–∏–∏ –¢–∏–Ω—å–∫–æ—Ñ—Ñ –ø–æ –∫–∞—Ä—Ç–µ"""
    # –†–∞–∑–±–∏—Ä–∞–µ–º –≤–≤–µ–¥–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    data = update.message.text.strip().split('\n')
    
    if len(data) < 8:
        await update.message.reply_text(
            "‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∞–Ω–Ω—ã–µ —Å–æ–≥–ª–∞—Å–Ω–æ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏."
        )
        return
    
    # –°–æ–∑–¥–∞–µ–º —Å–ª–æ–≤–∞—Ä—å —Å –¥–∞–Ω–Ω—ã–º–∏
    variables = {
        "transfer_amount": data[0],
        "commission": data[1],
        "recipient_card": data[2],
        "recipient_bank": data[3],
        "recipient_name": data[4],
        "sender_name": data[5],
        "status": data[6],
        "date_time": data[7],
        "receipt_number": data[8] if len(data) > 8 else "1-23-456-789-123"
    }
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–≤–∏—Ç–∞–Ω—Ü–∏—é
    try:
        generator = TinkoffReceiptGenerator()
        pdf_bytes = await generator.generate_card_receipt(variables)
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        user_id = update.effective_user.id
        Transaction.create(user_id, "receipt", -150, "Tinkoff card receipt")
        Stats.increment("receipt")
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–≤–∏—Ç–∞–Ω—Ü–∏—é
        await update.message.reply_document(
            document=io.BytesIO(pdf_bytes),
            filename="tinkoff_receipt_card.pdf",
            caption="‚úÖ –ì–æ—Ç–æ–≤–æ! –í–æ—Ç –≤–∞—à–∞ –∫–≤–∏—Ç–∞–Ω—Ü–∏—è –¢–∏–Ω—å–∫–æ—Ñ—Ñ –ø–æ –∫–∞—Ä—Ç–µ."
        )
    except Exception as e:
        await update.message.reply_text(
            f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–≤–∏—Ç–∞–Ω—Ü–∏–∏: {str(e)}"
        )
    
    # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    if "state" in context.user_data:
        del context.user_data["state"]

async def process_tinkoff_phone_receipt_data(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–µ–¥–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∫–≤–∏—Ç–∞–Ω—Ü–∏–∏ –¢–∏–Ω—å–∫–æ—Ñ—Ñ –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É"""
    # –ê–Ω–∞–ª–æ–≥–∏—á–Ω–æ process_tinkoff_card_receipt_data, –Ω–æ –¥–ª—è –∫–≤–∏—Ç–∞–Ω—Ü–∏–∏ –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É
    await update.message.reply_text("–§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–≤–∏—Ç–∞–Ω—Ü–∏–∏ –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É –µ—â–µ –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞.")
    
    # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    if "state" in context.user_data:
        del context.user_data["state"]

async def process_kaspi_transfer_receipt_data(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–µ–¥–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∫–≤–∏—Ç–∞–Ω—Ü–∏–∏ –ö–∞—Å–ø–∏"""
    await update.message.reply_text("–§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–≤–∏—Ç–∞–Ω—Ü–∏–∏ –ö–∞—Å–ø–∏ –µ—â–µ –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞.")
    
    # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    if "state" in context.user_data:
        del context.user_data["state"]

async def process_sberbank_sbp_receipt_data(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–µ–¥–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∫–≤–∏—Ç–∞–Ω—Ü–∏–∏ –°–±–µ—Ä–±–∞–Ω–∫–∞ –°–ë–ü"""
    await update.message.reply_text("–§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–≤–∏—Ç–∞–Ω—Ü–∏–∏ –°–±–µ—Ä–±–∞–Ω–∫–∞ –°–ë–ü –µ—â–µ –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞.")
    
    # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    if "state" in context.user_data:
        del context.user_data["state"]

async def process_sberbank_card_receipt_data(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–µ–¥–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∫–≤–∏—Ç–∞–Ω—Ü–∏–∏ –°–±–µ—Ä–±–∞–Ω–∫–∞ –ø–æ –∫–∞—Ä—Ç–µ"""
    await update.message.reply_text("–§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–≤–∏—Ç–∞–Ω—Ü–∏–∏ –°–±–µ—Ä–±–∞–Ω–∫–∞ –ø–æ –∫–∞—Ä—Ç–µ –µ—â–µ –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞.")
    
    # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    if "state" in context.user_data:
        del context.user_data["state"]

# –ó–∞–≥–ª—É—à–∫–∏ –¥–ª—è –¥—Ä—É–≥–∏—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
async def kaspi_receipts(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–ú–µ–Ω—é –∫–≤–∏—Ç–∞–Ω—Ü–∏–π –ö–∞—Å–ø–∏"""
    query = update.callback_query
    await query.answer()
    
    # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if "state" in context.user_data:
        del context.user_data["state"]
    
    await query.edit_message_caption(
        caption="üçÅ –ö–∞—Å–ø–∏ - –≤—ã–±–µ—Ä–∏ —Ç–∏–ø –ø–µ—Ä–µ–≤–æ–¥–∞ –≤ –∫–≤–∏—Ç–∞–Ω—Ü–∏–∏:",
        reply_markup=get_kaspi_receipts_keyboard(),
        parse_mode="Markdown"
    )

async def vtb_receipts(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–ú–µ–Ω—é –∫–≤–∏—Ç–∞–Ω—Ü–∏–π –í–¢–ë"""
    query = update.callback_query
    await query.answer()
    
    # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if "state" in context.user_data:
        del context.user_data["state"]
    
    await query.edit_message_caption(
        caption="üîµ –í–¢–ë - –≤—ã–±–µ—Ä–∏ —Ç–∏–ø –ø–µ—Ä–µ–≤–æ–¥–∞ –≤ –∫–≤–∏—Ç–∞–Ω—Ü–∏–∏:",
        reply_markup=InlineKeyboardMarkup([[InlineKeyboardButton("¬´ –ù–∞–∑–∞–¥", callback_data="receipts")]]),
        parse_mode="Markdown"
    )

async def sberbank_receipts(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–ú–µ–Ω—é –∫–≤–∏—Ç–∞–Ω—Ü–∏–π –°–±–µ—Ä–±–∞–Ω–∫–∞"""
    query = update.callback_query
    await query.answer()
    
    # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if "state" in context.user_data:
        del context.user_data["state"]
    
    await query.edit_message_caption(
        caption="üü¢ –°–±–µ—Ä–±–∞–Ω–∫ - –≤—ã–±–µ—Ä–∏ —Ç–∏–ø –ø–µ—Ä–µ–≤–æ–¥–∞ –≤ –∫–≤–∏—Ç–∞–Ω—Ü–∏–∏:",
        reply_markup=get_sberbank_receipts_keyboard(),
        parse_mode="Markdown"
    )

# –î–æ–±–∞–≤—å—Ç–µ –Ω–æ–≤—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–≤–∏—Ç–∞–Ω—Ü–∏–∏ –ø–æ –∫–∞—Ä—Ç–µ
async def tinkoff_receipt_card(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–≤–∏—Ç–∞–Ω—Ü–∏–∏ –¢–∏–Ω—å–∫–æ—Ñ—Ñ –ø–æ –∫–∞—Ä—Ç–µ"""
    query = update.callback_query
    await query.answer()
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
    context.user_data["state"] = "waiting_tinkoff_card_receipt_data"
    
    await query.edit_message_caption(
        caption="""üßæ –¢-–ë–∞–Ω–∫ ‚Üí –æ—Ç–ø—Ä–∞–≤—å –¥–∞–Ω–Ω—ã–µ –ø–æ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏:

1Ô∏è‚É£ –°—É–º–º–∞ –ø–µ—Ä–µ–≤–æ–¥–∞
2Ô∏è‚É£ –°—É–º–º–∞ –∫–æ–º–∏—Å—Å–∏–∏
3Ô∏è‚É£ –ö–∞—Ä—Ç–∞ –ø–æ–ª—É—á–∞—Ç–µ–ª—è
4Ô∏è‚É£ –ë–∞–Ω–∫ –ø–æ–ª—É—á–∞—Ç–µ–ª—è
5Ô∏è‚É£ –ò–º—è –ø–æ–ª—É—á–∞—Ç–µ–ª—è
6Ô∏è‚É£ –ò–º—è –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
7Ô∏è‚É£ –°—Ç–∞—Ç—É—Å –ø–µ—Ä–µ–≤–æ–¥–∞
8Ô∏è‚É£ –î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è –ø–µ—Ä–µ–≤–æ–¥–∞
‚ñ∂Ô∏è –ù–æ–º–µ—Ä –∫–≤–∏—Ç–∞–Ω—Ü–∏–∏

üëáüèª –ü—Ä–∏–º–µ—Ä –≤–≤–µ–¥–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö:

5 500,50
420,52
220220******1234
–¢-–ë–∞–Ω–∫
–°–æ—Ñ–∏—è –ú–∞—Ä–º–µ–ª–∞–¥–æ–≤–∞ –ú
–í–∞–ª–µ–Ω—Ç–∏–Ω –î—è–¥—å–∫–∞ –ú
–£—Å–ø–µ—à–Ω–æ
22.05.2025 23:06:11
1-23-456-789-123""",
        reply_markup=InlineKeyboardMarkup([[InlineKeyboardButton("¬´ –ù–∞–∑–∞–¥", callback_data="receipt_tinkoff")]]),
        parse_mode="Markdown"
    )